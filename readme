## Automated ELK Stack Deployment

The files in this repository were used to configure the network depicted below.

diagrams/network diagram-elk.png

These files have been tested and used to generate a live ELK deployment on Azure. They can be used to either recreate the entire deployment pictured above. Alternatively, select portions of the filebeat-playbook.yml file may be used to install only certain pieces of it, such as Filebeat.

playbooks/dvwa-playbook.yml.txt
playbooks/elk-playbook.yml.txt
playbooks/filebeat-playbook.yml.txt
playbooks/metricbeat-playbook.yml.txt

This document contains the following details:
- Description of the Topology
- Access Policies
- ELK Configuration
  - Beats in Use
  - Machines Being Monitored
- How to Use the Ansible Build


### Description of the Topology

The main purpose of this network is to expose a load-balanced and monitored instance of DVWA, the D*mn Vulnerable Web Application.

Load balancing ensures that the application will be highly efficient, in addition to restricting unwanted access to the network.
- What aspect of security do load balancers protect? What is the advantage of a jump box?
A load balancer is by default designed to be secure. It is closed to inbound flows unless allowed by NSGs. It adds an additional layers of security.
Jump box prevents all VM's exposure to the public. It serves as an additional layer of security to the other VMs.

Integrating an ELK server allows users to easily monitor the vulnerable VMs for changes to the file name and system metrics.
- What does Filebeat watch for?
Filebeat monitors log files and collects log events and forward them to Elasticsearch or logstash for indexing.
- What does Metricbeat record?
It collects metrics and statistics and moves them to elasticsearch or logstash, whichever you specify. 

The configuration details of each machine may be found below.

| Name     | Function | IP Address | Operating System |
|----------|----------|------------|------------------|
| Jump Box | Gateway  | 10.0.0.4   | Linux            |
| Web1     | Webserver| 10.0.0.5   | Linux            |
| Web2     | webserver| 10.0.0.6   | Linux            |
| Web-elk  | Elkserver| 10.1.0.4   | Linux            |

### Access Policies

The machines on the internal network are not exposed to the public Internet. 

Only the Jump box machine can accept connections from the Internet. Access to this machine is only allowed from the following IP addresses:
- 99.233.2.96/32

Machines within the network can only be accessed by my personal machine.
- Which machine did you allow to access your ELK VM? What was its IP address?
I allowed only my personal machine to access web-elk VM. its IP address is 99.233.2.96/32

A summary of the access policies in place can be found in the table below.

| Name     | Publicly Accessible | Allowed IP Addresses |
|----------|---------------------|----------------------|
| Jump Box |     No              |   99.233.2.96/32     |
|          |                     |                      |
|          |                     |                      |

### Elk Configuration

Ansible was used to automate configuration of the ELK machine. No configuration was performed manually, which is advantageous because...
- What is the main advantage of automating configuration with Ansible?
Ansible is an open source tool. It performs automation without installing a software agent on the target node.

The playbook implements the following tasks:
- Install docker and download the image 
- Create a new Virtual network and then a Virtual machine within the Vnet in azure environment.
- Using ansible configure the VM
- launch the elk container.
- verify by accessing kibana webpage using vms public ip.
The following screenshot displays the result of running `docker ps` after successfully configuring the ELK instance.
(screenshots/docker_ps_output.png)

### Target Machines & Beats
This ELK server is configured to monitor the following machines:
- web1: 10.0.0.5
- web2: 10.0.0.6

We have installed the following Beats on these machines:
- filebeats
- metricbeats

These Beats allow us to collect the following information from each machine:
- filebeat: It monitors lo files and collects log events and forwards them to elasticsearch or logstash for indexing.
- metricbeats: It takes the metrics and statistics that it collects and ships them to the output that you specify, such as Elasticsearch or Logstash.
### Using the Playbook
In order to use the playbook, you will need to have an Ansible control node already configured. Assuming you have such a control node provisioned: 

SSH into the control node and follow the steps below:
- Copy the playbook file to/etc/ansible.
- Update the ansible_config file to include the webservers and elk server IPs.
- Run the playbook, and navigate to http://[your.ELK-VM.External.IP]:5601/app/kibana to check that the installation worked as expected.

_TODO: Answer the following questions to fill in the blanks:_
- _Which file is the playbook? Where do you copy it?
Text file written in specific YAML format are called playbooks. These are copied within /etc/ansible ina container.
- _Which file do you update to make Ansible run the playbook on a specific machine? How do I specify which machine to install the ELK server on versus which to install Filebeat on?
We update the ansible_config file and hosts file. By specifying the webservers ips and elk server's ip.
- _Which URL do you navigate to in order to check that the ELK server is running?
 http://[your.ELK-VM.External.IP]:5601/app/kibana